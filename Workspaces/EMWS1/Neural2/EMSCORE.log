MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 17, 2015" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14:23:25" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 17, 2015
Time:                14:23:25
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O06ZFD_8 "C:\Users\bteric01\Documents\Tutorials_Projects\Project_4\Workspaces\EMWS1\Neural2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O06ZFD_8 new;
MPRINT(EM_DIAGRAM):   run;
53234      data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
53235      set EMWS1.Neural2_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural2_OUTKEY;
53236      if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
53237      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 13 observations read from the data set EMWS1.NEURAL2_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

53238      filename emflow "C:\Users\bteric01\Documents\Tutorials_Projects\Project_4\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\bteric01\Documents\Tutorials_Projects\Project_4\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
53239      *------------------------------------------------------------*;
53240      * Neural2: Scoring DATA data;
53241      *------------------------------------------------------------*;
53242      data EMWS1.Neural2_TRAIN
53243      / view=EMWS1.Neural2_TRAIN
53244      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_TRAIN / view=EMWS1.Neural2_TRAIN ;
53245      set EMWS1.BINNING_TRAIN
53246      ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_TRAIN ;
53247      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\bteric01\Documents\Tutorials_Projects\Project_4\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas.
53248     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
53249     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
53250     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
53251     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
53252     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
53253     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
53254     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
53255     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
53256     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
53257     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
53258     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
53259     +LENGTH _WARN_ $4
53260     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
53261     +      label GRP_Age2 = 'Dummy: GRP_Age=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Age2 = 'Dummy: GRP_Age=2' ;
53262     +
53263     +      label GRP_Age3 = 'Dummy: GRP_Age=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Age3 = 'Dummy: GRP_Age=3' ;
53264     +
53265     +      label GRP_Age4 = 'Dummy: GRP_Age=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Age4 = 'Dummy: GRP_Age=4' ;
53266     +
53267     +      label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
53268     +
53269     +      label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
53270     +
53271     +      label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
53272     +
53273     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
53274     +
53275     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
53276     +
53277     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
53278     +
53279     +      label P_SalePrice = 'Predicted: SalePrice' ;
MPRINT(EM_DIAGRAM):   label P_SalePrice = 'Predicted: SalePrice' ;
53280     +
53281     +      label R_SalePrice = 'Residual: SalePrice' ;
MPRINT(EM_DIAGRAM):   label R_SalePrice = 'Residual: SalePrice' ;
53282     +
53283     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
53284     +
53285     +*** Generate dummy variables for GRP_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Age ;
53286     +drop GRP_Age2 GRP_Age3 GRP_Age4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Age2 GRP_Age3 GRP_Age4 ;
53287     +if missing( GRP_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Age ) then do;
53288     +   GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
53289     +   GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
53290     +   GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
53291     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
53292     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53293     +end;
MPRINT(EM_DIAGRAM):   end;
53294     +else do;
MPRINT(EM_DIAGRAM):   else do;
53295     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
53296     +   _dm12 = put( GRP_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Age , BEST12. );
53297     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
53298     +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
53299     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
53300     +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
53301     +      GRP_Age4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = 0.63245553203367;
53302     +   end;
MPRINT(EM_DIAGRAM):   end;
53303     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
53304     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
53305     +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
53306     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
53307     +   end;
MPRINT(EM_DIAGRAM):   end;
53308     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
53309     +      GRP_Age2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = -0.63245553203367;
53310     +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
53311     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
53312     +   end;
MPRINT(EM_DIAGRAM):   end;
53313     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
53314     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
53315     +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
53316     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
53317     +   end;
MPRINT(EM_DIAGRAM):   end;
53318     +   else do;
MPRINT(EM_DIAGRAM):   else do;
53319     +      GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
53320     +      GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
53321     +      GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
53322     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
53323     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53324     +   end;
MPRINT(EM_DIAGRAM):   end;
53325     +end;
MPRINT(EM_DIAGRAM):   end;
53326     +
53327     +*** Generate dummy variables for GRP_TotalArea ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_TotalArea ;
53328     +drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
53329     +if missing( GRP_TotalArea ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_TotalArea ) then do;
53330     +   GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
53331     +   GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
53332     +   GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
53333     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
53334     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53335     +end;
MPRINT(EM_DIAGRAM):   end;
53336     +else do;
MPRINT(EM_DIAGRAM):   else do;
53337     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
53338     +   _dm12 = put( GRP_TotalArea , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_TotalArea , BEST12. );
53339     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
53340     +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
53341     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
53342     +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
53343     +      GRP_TotalArea4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = 0.63245553203367;
53344     +   end;
MPRINT(EM_DIAGRAM):   end;
53345     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
53346     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
53347     +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
53348     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
53349     +   end;
MPRINT(EM_DIAGRAM):   end;
53350     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
53351     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
53352     +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
53353     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
53354     +   end;
MPRINT(EM_DIAGRAM):   end;
53355     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
53356     +      GRP_TotalArea2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = -0.63245553203367;
53357     +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
53358     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
53359     +   end;
MPRINT(EM_DIAGRAM):   end;
53360     +   else do;
MPRINT(EM_DIAGRAM):   else do;
53361     +      GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
53362     +      GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
53363     +      GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
53364     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
53365     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53366     +   end;
MPRINT(EM_DIAGRAM):   end;
53367     +end;
MPRINT(EM_DIAGRAM):   end;
53368     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53369     +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
53370     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53371     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53372     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
53373     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53374     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
53375     +   H11  =  1.0000000827403E-10 * GRP_Age2  +  1.0000000827403E-10 * GRP_Age3
53376     +          +     18.9559961302211 * GRP_Age4  +  1.0000000827403E-10 *
53377     +        GRP_TotalArea2  +     14.7725771784866 * GRP_TotalArea3
53378     +          +      82.296259261635 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H11 = 1.0000000827403E-10 * GRP_Age2 + 1.0000000827403E-10 * GRP_Age3 + 18.9559961302211 * GRP_Age4 + 1.0000000827403E-10 * GRP_TotalArea2 + 14.7725771784866 * GRP_TotalArea3 + 82.296259261635 * GRP_TotalArea4 ;
53379     +   H12  =     3.15340711708705 * GRP_Age2  +      7.7019890208257 * GRP_Age3
53380     +          +  1.0000000827403E-10 * GRP_Age4  +     19.1423937009409 *
53381     +        GRP_TotalArea2  +  1.0000000827403E-10 * GRP_TotalArea3
53382     +          +     16.0556035718679 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H12 = 3.15340711708705 * GRP_Age2 + 7.7019890208257 * GRP_Age3 + 1.0000000827403E-10 * GRP_Age4 + 19.1423937009409 * GRP_TotalArea2 + 1.0000000827403E-10 * GRP_TotalArea3 + 16.0556035718679 * GRP_TotalArea4 ;
53383     +   H13  =      159.41309684645 * GRP_Age2  +     235.223316073762 * GRP_Age3
53384     +          +     155.697624338212 * GRP_Age4  +     94.2208519596052 *
53385     +        GRP_TotalArea2  +  1.0000000133514E-10 * GRP_TotalArea3
53386     +          +  9.9998231917197E-11 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H13 = 159.41309684645 * GRP_Age2 + 235.223316073762 * GRP_Age3 + 155.697624338212 * GRP_Age4 + 94.2208519596052 * GRP_TotalArea2 + 1.0000000133514E-10 * GRP_TotalArea3 + 9.9998231917197E-11 * GRP_TotalArea4 ;
53387     +   H11  =    -4.97510380635433 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -4.97510380635433 + H11 ;
53388     +   H12  =     9.28190669399731 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 9.28190669399731 + H12 ;
53389     +   H13  =     79.4398612902139 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 79.4398612902139 + H13 ;
53390     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
53391     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
53392     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
53393     +END;
MPRINT(EM_DIAGRAM):   END;
53394     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
53395     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
53396     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
53397     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
53398     +END;
MPRINT(EM_DIAGRAM):   END;
53399     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53400     +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
53401     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53402     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
53403     +   P_SalePrice  =     3332.63686904079 * H11  +      1881.5492640311 * H12
53404     +          +    -2843.75668761685 * H13 ;
MPRINT(EM_DIAGRAM):   P_SalePrice = 3332.63686904079 * H11 + 1881.5492640311 * H12 + -2843.75668761685 * H13 ;
53405     +   P_SalePrice  =     76533.1360629322 + P_SalePrice ;
MPRINT(EM_DIAGRAM):   P_SalePrice = 76533.1360629322 + P_SalePrice ;
53406     +END;
MPRINT(EM_DIAGRAM):   END;
53407     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
53408     +   P_SalePrice  = .;
MPRINT(EM_DIAGRAM):   P_SalePrice = .;
53409     +END;
MPRINT(EM_DIAGRAM):   END;
53410     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
53411     +   P_SalePrice  =     76154.1162790697;
MPRINT(EM_DIAGRAM):   P_SalePrice = 76154.1162790697;
53412     +END;
MPRINT(EM_DIAGRAM):   END;
53413     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
53414     +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
53415     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
53416     +IF MISSING( SalePrice ) THEN R_SalePrice  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( SalePrice ) THEN R_SalePrice = . ;
53417     +ELSE R_SalePrice  = SalePrice  - P_SalePrice ;
MPRINT(EM_DIAGRAM):   ELSE R_SalePrice = SalePrice - P_SalePrice ;
53418     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
53419     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
53420     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
53421     +drop
53422     +H11
53423     +H12
53424     +H13
53425     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
53426      run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
      

MPRINT(EM_DIAGRAM):   quit;
53427      quit;
53428      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
53429      filename emflow "C:\Users\bteric01\Documents\Tutorials_Projects\Project_4\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\bteric01\Documents\Tutorials_Projects\Project_4\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
53430      *------------------------------------------------------------*;
53431      * Neural2: Scoring VALIDATE data;
53432      *------------------------------------------------------------*;
53433      data EMWS1.Neural2_VALIDATE
53434      / view=EMWS1.Neural2_VALIDATE
53435      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_VALIDATE / view=EMWS1.Neural2_VALIDATE ;
53436      set EMWS1.BINNING_VALIDATE
53437      ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_VALIDATE ;
53438      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\bteric01\Documents\Tutorials_Projects\Project_4\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas.
53439     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
53440     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
53441     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
53442     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
53443     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
53444     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
53445     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
53446     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
53447     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
53448     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
53449     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
53450     +LENGTH _WARN_ $4
53451     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
53452     +      label GRP_Age2 = 'Dummy: GRP_Age=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Age2 = 'Dummy: GRP_Age=2' ;
53453     +
53454     +      label GRP_Age3 = 'Dummy: GRP_Age=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Age3 = 'Dummy: GRP_Age=3' ;
53455     +
53456     +      label GRP_Age4 = 'Dummy: GRP_Age=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Age4 = 'Dummy: GRP_Age=4' ;
53457     +
53458     +      label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
53459     +
53460     +      label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
53461     +
53462     +      label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
53463     +
53464     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
53465     +
53466     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
53467     +
53468     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
53469     +
53470     +      label P_SalePrice = 'Predicted: SalePrice' ;
MPRINT(EM_DIAGRAM):   label P_SalePrice = 'Predicted: SalePrice' ;
53471     +
53472     +      label R_SalePrice = 'Residual: SalePrice' ;
MPRINT(EM_DIAGRAM):   label R_SalePrice = 'Residual: SalePrice' ;
53473     +
53474     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
53475     +
53476     +*** Generate dummy variables for GRP_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Age ;
53477     +drop GRP_Age2 GRP_Age3 GRP_Age4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Age2 GRP_Age3 GRP_Age4 ;
53478     +if missing( GRP_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Age ) then do;
53479     +   GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
53480     +   GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
53481     +   GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
53482     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
53483     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53484     +end;
MPRINT(EM_DIAGRAM):   end;
53485     +else do;
MPRINT(EM_DIAGRAM):   else do;
53486     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
53487     +   _dm12 = put( GRP_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Age , BEST12. );
53488     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
53489     +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
53490     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
53491     +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
53492     +      GRP_Age4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = 0.63245553203367;
53493     +   end;
MPRINT(EM_DIAGRAM):   end;
53494     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
53495     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
53496     +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
53497     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
53498     +   end;
MPRINT(EM_DIAGRAM):   end;
53499     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
53500     +      GRP_Age2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = -0.63245553203367;
53501     +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
53502     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
53503     +   end;
MPRINT(EM_DIAGRAM):   end;
53504     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
53505     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
53506     +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
53507     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
53508     +   end;
MPRINT(EM_DIAGRAM):   end;
53509     +   else do;
MPRINT(EM_DIAGRAM):   else do;
53510     +      GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
53511     +      GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
53512     +      GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
53513     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
53514     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53515     +   end;
MPRINT(EM_DIAGRAM):   end;
53516     +end;
MPRINT(EM_DIAGRAM):   end;
53517     +
53518     +*** Generate dummy variables for GRP_TotalArea ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_TotalArea ;
53519     +drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
53520     +if missing( GRP_TotalArea ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_TotalArea ) then do;
53521     +   GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
53522     +   GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
53523     +   GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
53524     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
53525     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53526     +end;
MPRINT(EM_DIAGRAM):   end;
53527     +else do;
MPRINT(EM_DIAGRAM):   else do;
53528     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
53529     +   _dm12 = put( GRP_TotalArea , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_TotalArea , BEST12. );
53530     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
53531     +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
53532     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
53533     +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
53534     +      GRP_TotalArea4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = 0.63245553203367;
53535     +   end;
MPRINT(EM_DIAGRAM):   end;
53536     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
53537     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
53538     +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
53539     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
53540     +   end;
MPRINT(EM_DIAGRAM):   end;
53541     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
53542     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
53543     +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
53544     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
53545     +   end;
MPRINT(EM_DIAGRAM):   end;
53546     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
53547     +      GRP_TotalArea2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = -0.63245553203367;
53548     +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
53549     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
53550     +   end;
MPRINT(EM_DIAGRAM):   end;
53551     +   else do;
MPRINT(EM_DIAGRAM):   else do;
53552     +      GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
53553     +      GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
53554     +      GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
53555     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
53556     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53557     +   end;
MPRINT(EM_DIAGRAM):   end;
53558     +end;
MPRINT(EM_DIAGRAM):   end;
53559     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53560     +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
53561     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53562     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53563     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
53564     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53565     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
53566     +   H11  =  1.0000000827403E-10 * GRP_Age2  +  1.0000000827403E-10 * GRP_Age3
53567     +          +     18.9559961302211 * GRP_Age4  +  1.0000000827403E-10 *
53568     +        GRP_TotalArea2  +     14.7725771784866 * GRP_TotalArea3
53569     +          +      82.296259261635 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H11 = 1.0000000827403E-10 * GRP_Age2 + 1.0000000827403E-10 * GRP_Age3 + 18.9559961302211 * GRP_Age4 + 1.0000000827403E-10 * GRP_TotalArea2 + 14.7725771784866 * GRP_TotalArea3 + 82.296259261635 * GRP_TotalArea4 ;
53570     +   H12  =     3.15340711708705 * GRP_Age2  +      7.7019890208257 * GRP_Age3
53571     +          +  1.0000000827403E-10 * GRP_Age4  +     19.1423937009409 *
53572     +        GRP_TotalArea2  +  1.0000000827403E-10 * GRP_TotalArea3
53573     +          +     16.0556035718679 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H12 = 3.15340711708705 * GRP_Age2 + 7.7019890208257 * GRP_Age3 + 1.0000000827403E-10 * GRP_Age4 + 19.1423937009409 * GRP_TotalArea2 + 1.0000000827403E-10 * GRP_TotalArea3 + 16.0556035718679 * GRP_TotalArea4 ;
53574     +   H13  =      159.41309684645 * GRP_Age2  +     235.223316073762 * GRP_Age3
53575     +          +     155.697624338212 * GRP_Age4  +     94.2208519596052 *
53576     +        GRP_TotalArea2  +  1.0000000133514E-10 * GRP_TotalArea3
53577     +          +  9.9998231917197E-11 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H13 = 159.41309684645 * GRP_Age2 + 235.223316073762 * GRP_Age3 + 155.697624338212 * GRP_Age4 + 94.2208519596052 * GRP_TotalArea2 + 1.0000000133514E-10 * GRP_TotalArea3 + 9.9998231917197E-11 * GRP_TotalArea4 ;
53578     +   H11  =    -4.97510380635433 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -4.97510380635433 + H11 ;
53579     +   H12  =     9.28190669399731 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 9.28190669399731 + H12 ;
53580     +   H13  =     79.4398612902139 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 79.4398612902139 + H13 ;
53581     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
53582     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
53583     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
53584     +END;
MPRINT(EM_DIAGRAM):   END;
53585     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
53586     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
53587     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
53588     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
53589     +END;
MPRINT(EM_DIAGRAM):   END;
53590     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53591     +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
53592     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53593     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
53594     +   P_SalePrice  =     3332.63686904079 * H11  +      1881.5492640311 * H12
53595     +          +    -2843.75668761685 * H13 ;
MPRINT(EM_DIAGRAM):   P_SalePrice = 3332.63686904079 * H11 + 1881.5492640311 * H12 + -2843.75668761685 * H13 ;
53596     +   P_SalePrice  =     76533.1360629322 + P_SalePrice ;
MPRINT(EM_DIAGRAM):   P_SalePrice = 76533.1360629322 + P_SalePrice ;
53597     +END;
MPRINT(EM_DIAGRAM):   END;
53598     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
53599     +   P_SalePrice  = .;
MPRINT(EM_DIAGRAM):   P_SalePrice = .;
53600     +END;
MPRINT(EM_DIAGRAM):   END;
53601     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
53602     +   P_SalePrice  =     76154.1162790697;
MPRINT(EM_DIAGRAM):   P_SalePrice = 76154.1162790697;
53603     +END;
MPRINT(EM_DIAGRAM):   END;
53604     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
53605     +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
53606     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
53607     +IF MISSING( SalePrice ) THEN R_SalePrice  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( SalePrice ) THEN R_SalePrice = . ;
53608     +ELSE R_SalePrice  = SalePrice  - P_SalePrice ;
MPRINT(EM_DIAGRAM):   ELSE R_SalePrice = SalePrice - P_SalePrice ;
53609     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
53610     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
53611     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
53612     +drop
53613     +H11
53614     +H12
53615     +H13
53616     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
53617      run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL2_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.28 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.32 seconds
      cpu time            0.31 seconds
      

MPRINT(EM_DIAGRAM):   quit;
53618      quit;
53619      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
53620      filename emflow "C:\Users\bteric01\Documents\Tutorials_Projects\Project_4\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Users\bteric01\Documents\Tutorials_Projects\Project_4\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
53621      *------------------------------------------------------------*;
53622      * Neural2: Scoring TEST data;
53623      *------------------------------------------------------------*;
53624      data EMWS1.Neural2_TEST
53625      / view=EMWS1.Neural2_TEST
53626      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_TEST / view=EMWS1.Neural2_TEST ;
53627      set EMWS1.BINNING_TEST
53628      ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_TEST ;
53629      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\bteric01\Documents\Tutorials_Projects\Project_4\Workspaces\EMWS1\Neural2\EMFLOWSCORE.sas.
53630     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
53631     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
53632     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
53633     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
53634     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
53635     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
53636     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
53637     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
53638     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
53639     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
53640     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
53641     +LENGTH _WARN_ $4
53642     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
53643     +      label GRP_Age2 = 'Dummy: GRP_Age=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Age2 = 'Dummy: GRP_Age=2' ;
53644     +
53645     +      label GRP_Age3 = 'Dummy: GRP_Age=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Age3 = 'Dummy: GRP_Age=3' ;
53646     +
53647     +      label GRP_Age4 = 'Dummy: GRP_Age=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Age4 = 'Dummy: GRP_Age=4' ;
53648     +
53649     +      label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea2 = 'Dummy: GRP_TotalArea=2' ;
53650     +
53651     +      label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea3 = 'Dummy: GRP_TotalArea=3' ;
53652     +
53653     +      label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
MPRINT(EM_DIAGRAM):   label GRP_TotalArea4 = 'Dummy: GRP_TotalArea=4' ;
53654     +
53655     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
53656     +
53657     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
53658     +
53659     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
53660     +
53661     +      label P_SalePrice = 'Predicted: SalePrice' ;
MPRINT(EM_DIAGRAM):   label P_SalePrice = 'Predicted: SalePrice' ;
53662     +
53663     +      label R_SalePrice = 'Residual: SalePrice' ;
MPRINT(EM_DIAGRAM):   label R_SalePrice = 'Residual: SalePrice' ;
53664     +
53665     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
53666     +
53667     +*** Generate dummy variables for GRP_Age ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Age ;
53668     +drop GRP_Age2 GRP_Age3 GRP_Age4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Age2 GRP_Age3 GRP_Age4 ;
53669     +if missing( GRP_Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Age ) then do;
53670     +   GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
53671     +   GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
53672     +   GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
53673     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
53674     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53675     +end;
MPRINT(EM_DIAGRAM):   end;
53676     +else do;
MPRINT(EM_DIAGRAM):   else do;
53677     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
53678     +   _dm12 = put( GRP_Age , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Age , BEST12. );
53679     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
53680     +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
53681     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
53682     +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
53683     +      GRP_Age4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = 0.63245553203367;
53684     +   end;
MPRINT(EM_DIAGRAM):   end;
53685     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
53686     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
53687     +      GRP_Age3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = 0.63245553203367;
53688     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
53689     +   end;
MPRINT(EM_DIAGRAM):   end;
53690     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
53691     +      GRP_Age2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = -0.63245553203367;
53692     +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
53693     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
53694     +   end;
MPRINT(EM_DIAGRAM):   end;
53695     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
53696     +      GRP_Age2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age2 = 0.63245553203367;
53697     +      GRP_Age3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age3 = -0.63245553203367;
53698     +      GRP_Age4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_Age4 = -0.63245553203367;
53699     +   end;
MPRINT(EM_DIAGRAM):   end;
53700     +   else do;
MPRINT(EM_DIAGRAM):   else do;
53701     +      GRP_Age2 = .;
MPRINT(EM_DIAGRAM):   GRP_Age2 = .;
53702     +      GRP_Age3 = .;
MPRINT(EM_DIAGRAM):   GRP_Age3 = .;
53703     +      GRP_Age4 = .;
MPRINT(EM_DIAGRAM):   GRP_Age4 = .;
53704     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
53705     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53706     +   end;
MPRINT(EM_DIAGRAM):   end;
53707     +end;
MPRINT(EM_DIAGRAM):   end;
53708     +
53709     +*** Generate dummy variables for GRP_TotalArea ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_TotalArea ;
53710     +drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   drop GRP_TotalArea2 GRP_TotalArea3 GRP_TotalArea4 ;
53711     +if missing( GRP_TotalArea ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_TotalArea ) then do;
53712     +   GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
53713     +   GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
53714     +   GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
53715     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
53716     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53717     +end;
MPRINT(EM_DIAGRAM):   end;
53718     +else do;
MPRINT(EM_DIAGRAM):   else do;
53719     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
53720     +   _dm12 = put( GRP_TotalArea , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_TotalArea , BEST12. );
53721     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
53722     +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
53723     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
53724     +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
53725     +      GRP_TotalArea4 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = 0.63245553203367;
53726     +   end;
MPRINT(EM_DIAGRAM):   end;
53727     +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
53728     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
53729     +      GRP_TotalArea3 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = 0.63245553203367;
53730     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
53731     +   end;
MPRINT(EM_DIAGRAM):   end;
53732     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
53733     +      GRP_TotalArea2 = 0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = 0.63245553203367;
53734     +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
53735     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
53736     +   end;
MPRINT(EM_DIAGRAM):   end;
53737     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
53738     +      GRP_TotalArea2 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = -0.63245553203367;
53739     +      GRP_TotalArea3 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = -0.63245553203367;
53740     +      GRP_TotalArea4 = -0.63245553203367;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = -0.63245553203367;
53741     +   end;
MPRINT(EM_DIAGRAM):   end;
53742     +   else do;
MPRINT(EM_DIAGRAM):   else do;
53743     +      GRP_TotalArea2 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea2 = .;
53744     +      GRP_TotalArea3 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea3 = .;
53745     +      GRP_TotalArea4 = .;
MPRINT(EM_DIAGRAM):   GRP_TotalArea4 = .;
53746     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
53747     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
53748     +   end;
MPRINT(EM_DIAGRAM):   end;
53749     +end;
MPRINT(EM_DIAGRAM):   end;
53750     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53751     +*** Writing the Node ord ;
MPRINT(EM_DIAGRAM):   *** Writing the Node ord ;
53752     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53753     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53754     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
53755     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53756     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
53757     +   H11  =  1.0000000827403E-10 * GRP_Age2  +  1.0000000827403E-10 * GRP_Age3
53758     +          +     18.9559961302211 * GRP_Age4  +  1.0000000827403E-10 *
53759     +        GRP_TotalArea2  +     14.7725771784866 * GRP_TotalArea3
53760     +          +      82.296259261635 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H11 = 1.0000000827403E-10 * GRP_Age2 + 1.0000000827403E-10 * GRP_Age3 + 18.9559961302211 * GRP_Age4 + 1.0000000827403E-10 * GRP_TotalArea2 + 14.7725771784866 * GRP_TotalArea3 + 82.296259261635 * GRP_TotalArea4 ;
53761     +   H12  =     3.15340711708705 * GRP_Age2  +      7.7019890208257 * GRP_Age3
53762     +          +  1.0000000827403E-10 * GRP_Age4  +     19.1423937009409 *
53763     +        GRP_TotalArea2  +  1.0000000827403E-10 * GRP_TotalArea3
53764     +          +     16.0556035718679 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H12 = 3.15340711708705 * GRP_Age2 + 7.7019890208257 * GRP_Age3 + 1.0000000827403E-10 * GRP_Age4 + 19.1423937009409 * GRP_TotalArea2 + 1.0000000827403E-10 * GRP_TotalArea3 + 16.0556035718679 * GRP_TotalArea4 ;
53765     +   H13  =      159.41309684645 * GRP_Age2  +     235.223316073762 * GRP_Age3
53766     +          +     155.697624338212 * GRP_Age4  +     94.2208519596052 *
53767     +        GRP_TotalArea2  +  1.0000000133514E-10 * GRP_TotalArea3
53768     +          +  9.9998231917197E-11 * GRP_TotalArea4 ;
MPRINT(EM_DIAGRAM):   H13 = 159.41309684645 * GRP_Age2 + 235.223316073762 * GRP_Age3 + 155.697624338212 * GRP_Age4 + 94.2208519596052 * GRP_TotalArea2 + 1.0000000133514E-10 * GRP_TotalArea3 + 9.9998231917197E-11 * GRP_TotalArea4 ;
53769     +   H11  =    -4.97510380635433 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -4.97510380635433 + H11 ;
53770     +   H12  =     9.28190669399731 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 9.28190669399731 + H12 ;
53771     +   H13  =     79.4398612902139 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 79.4398612902139 + H13 ;
53772     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
53773     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
53774     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
53775     +END;
MPRINT(EM_DIAGRAM):   END;
53776     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
53777     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
53778     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
53779     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
53780     +END;
MPRINT(EM_DIAGRAM):   END;
53781     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53782     +*** Writing the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intervalTargets ;
53783     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
53784     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
53785     +   P_SalePrice  =     3332.63686904079 * H11  +      1881.5492640311 * H12
53786     +          +    -2843.75668761685 * H13 ;
MPRINT(EM_DIAGRAM):   P_SalePrice = 3332.63686904079 * H11 + 1881.5492640311 * H12 + -2843.75668761685 * H13 ;
53787     +   P_SalePrice  =     76533.1360629322 + P_SalePrice ;
MPRINT(EM_DIAGRAM):   P_SalePrice = 76533.1360629322 + P_SalePrice ;
53788     +END;
MPRINT(EM_DIAGRAM):   END;
53789     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
53790     +   P_SalePrice  = .;
MPRINT(EM_DIAGRAM):   P_SalePrice = .;
53791     +END;
MPRINT(EM_DIAGRAM):   END;
53792     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
53793     +   P_SalePrice  =     76154.1162790697;
MPRINT(EM_DIAGRAM):   P_SalePrice = 76154.1162790697;
53794     +END;
MPRINT(EM_DIAGRAM):   END;
53795     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
53796     +*** Writing the Residuals  of the Node intervalTargets ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node intervalTargets ;
53797     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
53798     +IF MISSING( SalePrice ) THEN R_SalePrice  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( SalePrice ) THEN R_SalePrice = . ;
53799     +ELSE R_SalePrice  = SalePrice  - P_SalePrice ;
MPRINT(EM_DIAGRAM):   ELSE R_SalePrice = SalePrice - P_SalePrice ;
53800     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
53801     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
53802     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
53803     +drop
53804     +H11
53805     +H12
53806     +H13
53807     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
53808      run;

NOTE: DATA STEP view saved on file EMWS1.NEURAL2_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_TEST.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.29 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.31 seconds
      cpu time            0.32 seconds
      

MPRINT(EM_DIAGRAM):   quit;
53809      quit;
53810      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
53811      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
53812      * Neural2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural2: Computing metadata for TRAIN data;
53813      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.34 seconds
      cpu time            0.35 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Users\bteric01\Documents\Tutorials_Projects\Project_4\Workspaces\EMWS1\Neural2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Neural2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Neural2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Neural2_TRAIN out=WORK.M23AN8U6 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M23AN8U6;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M23AN8U6(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M23AN8U6;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M23AN8U6;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M01ICR3S NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M01ICR3S;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M01ICR3S;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JH3A8O(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M01ICR3S;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M01ICR3S;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M01ICR3S;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M01ICR3S;
MPRINT(EMADVISECOLUMNS):   set WORK.M01ICR3S;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Neural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("SALEPRICE") model = "Neural2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
54140      data EMWS1.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS1.Neural2_EMINFO;
54141      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
54142      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
54143      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS1.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
54147      run;
54148      proc sort data = EMWS1.Neural2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Neural2_EMINFO NOTHREADS;
54149      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
54150      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS1.NEURAL2_EMINFO.
NOTE: The data set EMWS1.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS1.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.22 seconds
      
NOTE: View EMWS1.NEURAL2_VALIDATE.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      
NOTE: View EMWS1.NEURAL2_TEST.VIEW used (Total process time):
      real time           0.25 seconds
      cpu time            0.25 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
